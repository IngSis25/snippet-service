plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'

    id 'jacoco'
    id "org.jlleitschuh.gradle.ktlint" version "12.1.1"
}

jacoco {
    toolVersion = '0.8.11'
}

tasks.withType(Test).configureEach{
    finalizedBy(tasks.named('jacocoTestReport'))
}

tasks.named('jacocoTestReport'){
    dependsOn(tasks.named('test'))
    reports {
        xml.required.set(true)
        html.required.set(true)
        csv.required.set(false)
    }
}
tasks.named('jacocoTestCoverageVerification'){
    dependsOn(tasks.named('test'))
    violationRules {
        rule {
            limit { minimum = 0.80 }
        }
    }
}
tasks.named('check'){
    dependsOn(tasks.named('jacocoTestCoverageVerification'))
}

group = 'printscript'
version = '0.0.1-SNAPSHOT'
description = 'Snippet Service '

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'com.h2database:h2' //para testing
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('check') {
    dependsOn(tasks.named('ktlintCheck'))
}
